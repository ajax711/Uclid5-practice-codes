module main {

    var a, b, i, a1, b1: integer;

    init {
        a = 0;
        b = 0;
    }

    procedure increment(a: integer, b: integer)
        returns (aP: integer, bP: integer)
        modifies a1, b1, i;
    {
        i = 0;
        a1 = a;
        b1 = b;

        while (i < 100) {
            b1 = b1 + a1;
            a1 = a1 + 1;
            i = i + 1;
        }

        aP = a1;
        bP = b1;
    }

    next {
        call (a', b') = increment(a, b);
    }

    invariant a_gt: a >= 0;
    invariant b_gt: b >= 0;

    control {
        vobj = induction(2);
        check;
        print_results;
        vobj.print_cex(a, b);
    }
}

